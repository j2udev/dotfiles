{
  //vim
  "vim.leader": "<space>",
  "vim.timeout": 500,
  "vim.smartRelativeLine": true,
  "vim.easymotion": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.sneak": true,
  "vim.visualstar": true,
  "vim.foldfix": true,
  "vim.normalModeKeyBindings": [
      {
          "before": ["<tab>"],
          "commands": ["workbench.action.nextEditor"]
      },
      {
          "before": ["<S-tab>"],
          "commands": ["workbench.action.previousEditor"]
      },
      {
          "before": ["<leader>", "o"],
          "after": ["o", "<Esc>"]
      },
      {
          "before": ["<leader>", "O"],
          "after": ["O", "<Esc>"]
      },
      {
          "before": ["s"],
          "after": ["<leader>", "<leader>", "2", "f"]
      },
      {
          "before": ["S"],
          "after": ["<leader>", "<leader>", "2", "F"]
      },
      {
          "before": ["<S-k>"],
          "commands": ["editor.action.showHover"]
      },
      {
          "before": ["<leader>", "/"],
          "commands": ["editor.action.commentLine"]
      }
  ],
  "vim.insertModeKeyBindings": [
      {
          "before": ["j", "k"],
          "after": ["<Esc>"]
      },
      {
          "before": ["k", "j"],
          "after": ["<Esc>"]
      }
  ],
  "vim.visualModeKeyBindings": [
      {
          "before": [">"],
          "after": [">", "g", "v"]
      },
      {
          "before": ["<"],
          "after": ["<", "g", "v"]
      },
      {
          "before": ["<C-c>"],
          "after": ["<Esc>"]
      },
      {
          "before": ["<S-k>"],
          "commands": ["editor.action.moveLinesUpAction"]
      },
      {
          "before": ["<S-j>"],
          "commands": ["editor.action.moveLinesDownAction"]
      },
      {
          "before": ["<leader>", "/"],
          "commands": ["editor.action.commentLine"]
      }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
      {
          "before": ["<BS>"],
          "commands": ["whichkey.show"]
      },
      {
          "before": ["<C-n>"],
          "commands": [":nohl"]
      },
      {
          "before": ["<leader>", "\\"],
          "commands": ["workbench.action.splitEditor"]
      },
      {
          "before": ["<leader>", "-"],
          "commands": ["workbench.action.splitEditorOrthogonal"]
      },
      // {
      //     "before": ["<leader>", "q"],
      //     "commands": ["workbench.action.closeGroup"]
      // },
      // {
      //     "before": ["<leader>", "d"],
      //     "commands": ["workbench.action.closeActiveEditor"]
      // },
      {
          "before": ["<leader>", "B"],
          "commands": ["bookmarks.toggle"]
      },
      {
          "before": ["<leader>", "D"],
          "commands": ["workbench.action.debug.start"]
      },
      {
          "before": ["<leader>", "e"],
          "commands": ["workbench.view.explorer"]
      },
      {
          "before": ["<leader>", "E"],
          "commands": ["workbench.action.toggleSidebarVisibility"]
      },
      // {
      //     "before": ["<leader>", "D"],
      //     "commands": ["workbench.action.debug.start"]
      // },
      {
          "before": ["<leader>", "f"],
          "commands": ["editor.action.formatDocument"],
          "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
      },
      {
          "before": ["<leader>", "F"],
          "commands": ["editor.toggleFold"]
      },
      {
          "before": ["<leader>", "g"],
          "commands": ["workbench.view.scm"]
      },
      {
          "before": ["<leader>", "h"],
          "commands": ["workbench.action.moveEditorToLeftGroup"]
      },
      {
          "before": ["<leader>", "l"],
          "commands": ["workbench.action.moveEditorToRightGroup"]
      },
      {
          "before": ["<leader>", "j"],
          "commands": ["workbench.action.moveEditorToBelowGroup"]
      },
      {
          "before": ["<leader>", "k"],
          "commands": ["workbench.action.moveEditorToAboveGroup"]
      },
      {
          "before": ["<leader>", "m"],
          "commands": ["workbench.action.toggleEditorWidths"]
      },
      {
          "before": ["<leader>", "M"],
          "commands": ["editor.action.toggleMinimap"]
      },
      {
          "before": ["<leader>", "p"],
          "commands": ["workbench.action.quickOpen"]
      },
      {
          "before": ["<leader>", "P"],
          "commands": ["editor.action.peekDefinition"]
      },
      {
          "before": ["<leader>", "q"],
          "commands": ["workbench.action.closeActiveEditor"]
      },
      {
          "before": ["<leader>", "r"],
          "commands": ["editor.action.rename"],
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
      },
      {
          "before": ["<leader>", "R"],
          "commands": ["editor.action.referenceSearch.trigger"]
      },
      {
          "before": ["<leader>", "t"],
          "commands": ["workbench.action.selectTheme"]
      },
      {
          "before": ["<leader>", "w"],
          "commands": ["workbench.action.files.save"]
      },
      {
          "before": ["<leader>", "z"],
          "commands": ["workbench.action.toggleZenMode"]
      },
      {
          "before": ["<C-h>"],
          "commands": ["workbench.action.focusLeftGroup"]
      },
      {
          "before": ["<C-l>"],
          "commands": ["workbench.action.focusRightGroup"]
      },
      {
          "before": ["<C-j>"],
          "commands": ["workbench.action.focusBelowGroup"]
      },
      {
          "before": ["<C-k>"],
          "commands": ["workbench.action.focusAboveGroup"]
      },
      {
          "before": ["d"],
          "after": ["\"", "_", "d"]
      },
      {
          "before": ["c"],
          "after": ["\"", "_", "c"]
      },
      {
          "before": ["D"],
          "after": ["\"", "_", "D"]
      },
      {
          "before": ["C"],
          "after": ["\"", "_", "C"]
      }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
      {
          "before": ["p"],
          "after": ["p", "g", "v", "y"]
      },
      {
          "before": ["d"],
          "after": ["\"", "_", "d"]
      },
      {
          "before": ["c"],
          "after": ["\"", "_", "c"]
      }
  ],

  //whichkey
  "whichkey.bindings": [
      {
          "key": ";",
          "name": "$(chevron-right) Command Palette",
          "type": "command",
          "command": "workbench.action.showCommands"
      },
      {
          "key": "\\",
          "name": "$(split-horizontal) Split Vertically",
          "type": "command",
          "command": "workbench.action.splitEditor"
      },
      {
          "key": "-",
          "name": "$(split-vertical) Split Horizontally",
          "type": "command",
          "command": "workbench.action.splitEditorOrthogonal"
      },
      {
          "key": "/",
          "name": "$(comment) Comment",
          "type": "command",
          "command": "editor.action.commentLine",
          "args": "<C-/>"
      },
      {
          "key": "?",
          "name": "$(references) View All References",
          "type": "command",
          "command": "references-view.find",
          "when": "editorHasReferenceProvider"
      },
      {
          "key": "b",
          "name": "$(multiple-windows) +Buffers/Editors",
          "type": "bindings",
          "bindings": [
              {
                  "key": "b",
                  "name": "Show all buffers/editors",
                  "type": "command",
                  "command": "workbench.action.showAllEditors"
              },
              {
                  "key": "c",
                  "name": "Close active editor",
                  "type": "command",
                  "command": "workbench.action.closeActiveEditor"
              },
              {
                  "key": "C",
                  "name": "Close other editors",
                  "type": "command",
                  "command": "workbench.action.closeOtherEditors"
              },
              {
                  "key": "h",
                  "name": "Move editor into left group",
                  "type": "command",
                  "command": "workbench.action.moveEditorToLeftGroup"
              },
              {
                  "key": "j",
                  "name": "Move editor into below group",
                  "type": "command",
                  "command": "workbench.action.moveEditorToBelowGroup"
              },
              {
                  "key": "k",
                  "name": "Move editor into above group",
                  "type": "command",
                  "command": "workbench.action.moveEditorToAboveGroup"
              },
              {
                  "key": "l",
                  "name": "Move editor into right group",
                  "type": "command",
                  "command": "workbench.action.moveEditorToRightGroup"
              },
              {
                  "key": "m",
                  "name": "Toggle max editor group",
                  "type": "command",
                  "command": "workbench.action.toggleEditorWidths"
              },
              {
                  "key": "n",
                  "name": "Next editor",
                  "type": "command",
                  "command": "workbench.action.nextEditor"
              },
              {
                  "key": "p",
                  "name": "Previous editor",
                  "type": "command",
                  "command": "workbench.action.previousEditor"
              },
              {
                  "key": "N",
                  "name": "New untitled editor",
                  "type": "command",
                  "command": "workbench.action.files.newUntitledFile"
              },
              {
                  "key": "u",
                  "name": "Reopen closed editor",
                  "type": "command",
                  "command": "workbench.action.reopenClosedEditor"
              },
              {
                  "key": "y",
                  "name": "Copy buffer to clipboard",
                  "type": "commands",
                  "commands": [
                      "editor.action.selectAll",
                      "editor.action.clipboardCopyAction",
                      "cancelSelection"
                  ]
              }
          ]
      },
      {
          "key": "B",
          "name": "$(bookmark) +Bookmark (toggle bookmark)",
          "type": "bindings",
          "bindings": [
              {
                  "key": "c",
                  "name": "Clear bookmarks",
                  "type": "command",
                  "command": "bookmarks.clear"
              },
              {
                  "key": "j",
                  "name": "Next bookmark",
                  "type": "command",
                  "command": "bookmarks.jumpToNext",
                  "when": "editorTextFocus"
              },
              {
                  "key": "k",
                  "name": "Previous bookmark",
                  "type": "command",
                  "command": "bookmarks.jumpToPrevious",
                  "when": "editorTextFocus"
              },
              {
                  "key": "l",
                  "name": "List bookmarks",
                  "type": "command",
                  "command": "bookmarks.listFromAllFiles",
                  "when": "editorTextFocus"
              },
              {
                  "key": "r",
                  "name": "Refresh bookmarks",
                  "type": "command",
                  "command": "bookmarks.refresh"
              },
              {
                  "key": "t",
                  "name": "Toggle bookmark",
                  "type": "command",
                  "command": "bookmarks.toggle",
                  "when": "editorTextFocus"
              },
              {
                  "key": "s",
                  "name": "Show bookmarks",
                  "type": "command",
                  "command": "workbench.view.extension.bookmarks"
              }
          ]
      },
      {
          "key": "d",
          "name": "$(debug-alt) +Debug (start debug)",
          "type": "bindings",
          "bindings": [
              {
                  "key": "s",
                  "name": "Start debug",
                  "type": "command",
                  "command": "workbench.action.debug.start"
              },
              {
                  "key": "S",
                  "name": "Stop debug",
                  "type": "command",
                  "command": "workbench.action.debug.stop"
              },
              {
                  "key": "c",
                  "name": "Continue debug",
                  "type": "command",
                  "command": "workbench.action.debug.continue"
              },
              {
                  "key": "p",
                  "name": "Pause debug",
                  "type": "command",
                  "command": "workbench.action.debug.pause"
              },
              {
                  "key": "r",
                  "name": "Run without debugging",
                  "type": "command",
                  "command": "workbench.action.debug.run"
              },
              {
                  "key": "R",
                  "name": "Restart debug",
                  "type": "command",
                  "command": "workbench.action.debug.restart"
              },
              {
                  "key": "i",
                  "name": "Step into",
                  "type": "command",
                  "command": "workbench.action.debug.stepInto"
              },
              {
                  "key": "o",
                  "name": "Step over",
                  "type": "command",
                  "command": "workbench.action.debug.stepOver"
              },
              {
                  "key": "O",
                  "name": "Step out",
                  "type": "command",
                  "command": "workbench.action.debug.stepOut"
              },
              {
                  "key": "D",
                  "name": "Disable all breakpoints",
                  "type": "command",
                  "command": "workbench.debug.viewlet.action.disableAllBreakpoints"
              },
              {
                  "key": "E",
                  "name": "Enable all breakpoints",
                  "type": "command",
                  "command": "workbench.debug.viewlet.action.enableAllBreakpoints"
              },
              {
                  "key": "b",
                  "name": "Toggle breakpoint",
                  "type": "command",
                  "command": "editor.debug.action.toggleBreakpoint"
              },
              {
                  "key": "B",
                  "name": "Toggle inline breakpoint",
                  "type": "command",
                  "command": "editor.debug.action.toggleInlineBreakpoint"
              },
              {
                  "key": "j",
                  "name": "Jump to cursor",
                  "type": "command",
                  "command": "debug.jumpToCursor"
              },
              {
                  "key": "v",
                  "name": "REPL",
                  "type": "command",
                  "command": "workbench.debug.action.toggleRepl"
              },
              {
                  "key": "w",
                  "name": "Focus on watch window",
                  "type": "command",
                  "command": "workbench.debug.action.focusWatchView"
              },
              {
                  "key": "W",
                  "name": "Add to watch",
                  "type": "command",
                  "command": "editor.debug.action.selectionToWatch"
              }
          ]
      },
      // {
      //     "key": "D",
      //     "name": "$(debug-alt) +Debug (start debug)",
      //     "type": "bindings",
      //     "bindings": [
      //         {
      //             "key": "s",
      //             "name": "Start debug",
      //             "type": "command",
      //             "command": "workbench.action.debug.start"
      //         },
      //         {
      //             "key": "S",
      //             "name": "Stop debug",
      //             "type": "command",
      //             "command": "workbench.action.debug.stop"
      //         },
      //         {
      //             "key": "c",
      //             "name": "Continue debug",
      //             "type": "command",
      //             "command": "workbench.action.debug.continue"
      //         },
      //         {
      //             "key": "p",
      //             "name": "Pause debug",
      //             "type": "command",
      //             "command": "workbench.action.debug.pause"
      //         },
      //         {
      //             "key": "r",
      //             "name": "Run without debugging",
      //             "type": "command",
      //             "command": "workbench.action.debug.run"
      //         },
      //         {
      //             "key": "R",
      //             "name": "Restart debug",
      //             "type": "command",
      //             "command": "workbench.action.debug.restart"
      //         },
      //         {
      //             "key": "i",
      //             "name": "Step into",
      //             "type": "command",
      //             "command": "workbench.action.debug.stepInto"
      //         },
      //         {
      //             "key": "o",
      //             "name": "Step over",
      //             "type": "command",
      //             "command": "workbench.action.debug.stepOver"
      //         },
      //         {
      //             "key": "O",
      //             "name": "Step out",
      //             "type": "command",
      //             "command": "workbench.action.debug.stepOut"
      //         },
      //         {
      //             "key": "D",
      //             "name": "Disable all breakpoints",
      //             "type": "command",
      //             "command": "workbench.debug.viewlet.action.disableAllBreakpoints"
      //         },
      //         {
      //             "key": "E",
      //             "name": "Enable all breakpoints",
      //             "type": "command",
      //             "command": "workbench.debug.viewlet.action.enableAllBreakpoints"
      //         },
      //         {
      //             "key": "b",
      //             "name": "Toggle breakpoint",
      //             "type": "command",
      //             "command": "editor.debug.action.toggleBreakpoint"
      //         },
      //         {
      //             "key": "B",
      //             "name": "Toggle inline breakpoint",
      //             "type": "command",
      //             "command": "editor.debug.action.toggleInlineBreakpoint"
      //         },
      //         {
      //             "key": "j",
      //             "name": "Jump to cursor",
      //             "type": "command",
      //             "command": "debug.jumpToCursor"
      //         },
      //         {
      //             "key": "v",
      //             "name": "REPL",
      //             "type": "command",
      //             "command": "workbench.debug.action.toggleRepl"
      //         },
      //         {
      //             "key": "w",
      //             "name": "Focus on watch window",
      //             "type": "command",
      //             "command": "workbench.debug.action.focusWatchView"
      //         },
      //         {
      //             "key": "W",
      //             "name": "Add to watch",
      //             "type": "command",
      //             "command": "editor.debug.action.selectionToWatch"
      //         }
      //     ]
      // },
      {
          "key": "e",
          "name": "$(files) +Explorer (show explorer)",
          "type": "command",
          "bindings": [
              {
                  "key": "e",
                  "name": "Show explorer",
                  "type": "command",
                  "command": "workbench.view.explorer"
              },
              {
                  "key": "s",
                  "name": "Show search",
                  "type": "command",
                  "command": "workbench.view.search"
              },
              {
                  "key": "g",
                  "name": "Show source control",
                  "type": "command",
                  "command": "workbench.view.scm"
              },
              {
                  "key": "t",
                  "name": "Show test",
                  "type": "command",
                  "command": "workbench.view.extension.test"
              },
              {
                  "key": "r",
                  "name": "Show remote explorer",
                  "type": "command",
                  "command": "workbench.view.remote"
              },
              {
                  "key": "x",
                  "name": "Show extensions",
                  "type": "command",
                  "command": "workbench.view.extensions"
              },
              {
                  "key": "p",
                  "name": "Show problem",
                  "type": "command",
                  "command": "workbench.actions.view.problems"
              },
              {
                  "key": "o",
                  "name": "Show output",
                  "type": "command",
                  "command": "workbench.action.output.toggleOutput"
              },
              {
                  "key": "d",
                  "name": "Show debug console",
                  "type": "command",
                  "command": "workbench.debug.action.toggleRepl"
              }
          ]
      },
      {
          "key": "f",
          "name": "$(note) Format",
          "type": "command",
          "command": "editor.action.formatDocument",
          "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
      },
      {
          "key": "F",
          "name": "$(folding-expanded) Fold",
          "type": "command",
          "command": "editor.toggleFold"
      },
      {
          "key": "g",
          "name": "$(git-branch) +Git (view source control)",
          "type": "bindings",
          "bindings": [
              {
                  "key": "/",
                  "name": "Search Commits",
                  "command": "gitlens.showCommitSearch",
                  "type": "command",
                  "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
              },
              {
                  "key": "a",
                  "name": "Stage",
                  "type": "command",
                  "command": "git.stage"
              },
              {
                  "key": "b",
                  "name": "Checkout",
                  "type": "command",
                  "command": "git.checkout"
              },
              {
                  "key": "B",
                  "name": "Browse",
                  "type": "command",
                  "command": "gitlens.openFileInRemote"
              },
              {
                  "key": "c",
                  "name": "Commit",
                  "type": "command",
                  "command": "git.commit"
              },
              {
                  "key": "C",
                  "name": "Cherry Pick",
                  "type": "command",
                  "command": "gitlens.views.cherryPick"
              },
              {
                  "key": "d",
                  "name": "Delete Branch",
                  "type": "command",
                  "command": "git.deleteBranch"
              },
              {
                  "key": "f",
                  "name": "Fetch",
                  "type": "command",
                  "command": "git.fetch"
              },
              {
                  "key": "F",
                  "name": "Pull From",
                  "type": "command",
                  "command": "git.pullFrom"
              },
              {
                  "key": "g",
                  "name": "Graph",
                  "type": "command",
                  "command": "git-graph.view"
              },
              {
                  "key": "h",
                  "name": "Heatmap",
                  "type": "command",
                  "command": "gitlens.toggleFileHeatmap"
              },
              {
                  "key": "H",
                  "name": "History",
                  "type": "command",
                  "command": "git.viewFileHistory"
              },
              {
                  "key": "i",
                  "name": "Init",
                  "type": "command",
                  "command": "git.init"
              },
              {
                  "key": "j",
                  "name": "Next Change",
                  "type": "command",
                  "command": "workbench.action.editor.nextChange"
              },
              {
                  "key": "k",
                  "name": "Previous Change",
                  "type": "command",
                  "command": "workbench.action.editor.previousChange"
              },
              {
                  "key": "l",
                  "name": "Toggle Line Blame",
                  "type": "command",
                  "command": "gitlens.toggleLineBlame",
                  "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
              },
              {
                  "key": "L",
                  "name": "Toggle GitLens",
                  "type": "command",
                  "command": "gitlens.toggleCodeLens",
                  "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
              },
              {
                  "key": "m",
                  "name": "Merge",
                  "type": "command",
                  "command": "git.merge"
              },
              {
                  "key": "p",
                  "name": "Push",
                  "type": "command",
                  "command": "git.push"
              },
              {
                  "key": "P",
                  "name": "Push",
                  "type": "command",
                  "command": "git.pull"
              },
              {
                  "key": "s",
                  "name": "Stash",
                  "type": "command",
                  "command": "workbench.view.scm"
              },
              {
                  "key": "S",
                  "name": "Status",
                  "type": "command",
                  "command": "gitlens.showQuickRepoStatus",
                  "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
              },
              {
                  "key": "t",
                  "name": "Create Tag",
                  "type": "command",
                  "command": "git.createTag"
              },
              {
                  "key": "T",
                  "name": "Delete Tag",
                  "type": "command",
                  "command": "git.deleteTag"
              },
              {
                  "key": "U",
                  "name": "Unstage",
                  "type": "command",
                  "command": "git.unstage"
              },
              {
                  "key": "v",
                  "name": "View SCM",
                  "command": "workbench.view.scm",
                  "type": "command",
                  "when": "workbench.scm.active"
              }
          ]
      },
      {
          "key": "i",
          "name": "$(add) +Insert",
          "type": "bindings",
          "bindings": [
              {
                  "key": "j",
                  "name": "Insert line below",
                  "type": "command",
                  "command": "editor.action.insertLineAfter"
              },
              {
                  "key": "k",
                  "name": "Insert line above",
                  "type": "command",
                  "command": "editor.action.insertLineBefore"
              },
              {
                  "key": "s",
                  "name": "Insert snippet",
                  "type": "command",
                  "command": "editor.action.insertSnippet"
              }
          ]
      },
      {
          "key": "l",
          "name": "$(lightbulb) +LSP",
          "type": "bindings",
          "bindings": [
              {
                  "key": ";",
                  "name": "Refactor",
                  "type": "command",
                  "command": "editor.action.refactor",
                  "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
              },
              {
                  "key": "a",
                  "name": "Auto Fix",
                  "type": "command",
                  "command": "editor.action.autoFix",
                  "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
              },
              {
                  "key": "d",
                  "name": "Definition",
                  "type": "command",
                  "command": "editor.action.revealDefinition",
                  "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
              },
              {
                  "key": "D",
                  "name": "Declaration",
                  "type": "command",
                  "command": "editor.action.revealDeclaration"
              },
              {
                  "key": "e",
                  "name": "Errors",
                  "type": "command",
                  "command": "workbench.actions.view.problems"
              },
              {
                  "key": "f",
                  "name": "Format",
                  "type": "command",
                  "command": "editor.action.formatDocument",
                  "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
              },
              {
                  "key": "i",
                  "name": "Implementation",
                  "type": "command",
                  "command": "editor.action.goToImplementation",
                  "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
              },
              {
                  "key": "l",
                  "name": "Code lens",
                  "type": "command",
                  "command": "codelens.showLensesInCurrentLine"
              },
              {
                  "key": "n",
                  "name": "Next problem",
                  "type": "command",
                  "command": "editor.action.marker.next",
                  "when": "editorFocus"
              },
              {
                  "key": "N",
                  "name": "Next problem (proj)",
                  "type": "command",
                  "command": "editor.action.marker.nextInFiles",
                  "when": "editorFocus"
              },
              {
                  "key": "o",
                  "name": "Outline",
                  "type": "command",
                  "command": "outline.focus"
              },
              {
                  "key": "p",
                  "name": "Prev problem",
                  "type": "command",
                  "command": "editor.action.marker.prevInFiles",
                  "when": "editorFocus"
              },
              {
                  "key": "P",
                  "name": "Prev problem (proj)",
                  "type": "command",
                  "command": "editor.action.marker.prev",
                  "when": "editorFocus"
              },
              {
                  "key": "q",
                  "name": "Quick fix",
                  "type": "command",
                  "command": "editor.action.quickFix",
                  "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
              },
              {
                  "key": "r",
                  "name": "References",
                  "type": "command",
                  "command": "editor.action.goToReferences",
                  "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
              },
              {
                  "key": "R",
                  "name": "Rename",
                  "type": "command",
                  "command": "editor.action.rename",
                  "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
              },
              {
                  "key": "v",
                  "name": "View all references",
                  "type": "command",
                  "command": "references-view.find",
                  "when": "editorHasReferenceProvider"
              },
              {
                  "key": "s",
                  "name": "Go to symbol",
                  "type": "command",
                  "command": "workbench.action.gotoSymbol"
              },
              {
                  "key": "S",
                  "name": "Show all symbols",
                  "type": "command",
                  "command": "workbench.action.showAllSymbols"
              }
          ]
      },
      {
          "key": "m",
          "name": "Maximize Editor Group (toggle)",
          "type": "bindings",
          "command": "workbench.action.toggleEditorWidths"
      },
      {
          "key": "M",
          "name": "$(file-media) Minimap",
          "type": "command",
          "command": "editor.action.toggleMinimap"
      },
      {
          "key": "p",
          "name": "$(folder-opened) +Open (file in project)",
          "type": "bindings",
          "bindings": [
              {
                  "key": "p",
                  "name": "File in project",
                  "type": "command",
                  "command": "workbench.action.quickOpen"
              },
              {
                  "key": "r",
                  "name": "Recent",
                  "type": "command",
                  "command": "workbench.action.openRecent"
              },
              {
                  "key": "f",
                  "name": "File",
                  "type": "command",
                  "command": "workbench.action.files.openFileFolder"
              }
          ]
      },
      {
          "key": "P",
          "name": "$(eye) +Peek (definition)",
          "type": "bindings",
          "bindings": [
              {
                  "key": "d",
                  "name": "Definition",
                  "type": "command",
                  "command": "editor.action.peekDefinition",
                  "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
              },
              {
                  "key": "D",
                  "name": "Declaration",
                  "type": "command",
                  "command": "editor.action.peekDeclaration"
              },
              {
                  "key": "i",
                  "name": "Implementation",
                  "type": "command",
                  "command": "editor.action.peekImplementation",
                  "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
              },
              {
                  "key": "p",
                  "name": "Toggle focus",
                  "type": "command",
                  "command": "togglePeekWidgetFocus",
                  "when": "inReferenceSearchEditor || referenceSearchVisible"
              },
              {
                  "key": "r",
                  "name": "References",
                  "type": "command",
                  "command": "editor.action.referenceSearch.trigger"
              },
              {
                  "key": "t",
                  "name": "Type Definition",
                  "type": "command",
                  "command": "editor.action.peekTypeDefinition"
              }
          ]
      },
      {
          "key": "q",
          "name": "$(panel-close) Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
      },
      // {
      //     "key": "q",
      //     "name": "$(panel-close) Close editor group",
      //     "type": "command",
      //     "command": "workbench.action.closeGroup"
      // },
      {
          "key": "r",
          "name": "$(lightbulb) Rename",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
      },
      {
          "key": "R",
          "name": "$(eye) Peek references",
          "type": "command",
          "command": "editor.action.toggleMinimap"
      },
      {
          "key": "t",
          "name": "$(book) Themes",
          "type": "bindings",
          "command": "workbench.action.selectTheme"
      },
      {
          "key": "w",
          "name": "$(save) Write",
          "type": "bindings",
          "command": "workbench.action.files.save"
      },
      {
          "key": "x",
          "name": "$(extensions) Extensions",
          "type": "command",
          "command": "workbench.view.extensions"
      },
      {
          "key": "z",
          "name": "$(debug-disconnect) Toggle Zen Mode",
          "type": "command",
          "command": "workbench.action.toggleZenMode"
      }
  ],

  //terminal
  "terminal.integrated.fontFamily": "MesloLGS NF",
  "terminal.integrated.defaultProfile.linux": "zsh",
  "terminal.external.osxExec": "iTerm.app",
  "terminal.integrated.detectLocale": "off",
  "terminal.integrated.fontSize": 20,
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.scrollback": 10000,
  "terminal.integrated.minimumContrastRatio": 1,

  //editor
  "editor.fontFamily": "FiraCode-Retina, FiraCode-Regular, FiraCode-SemiBold, Menlo, Monaco, Courier New, monospace",
  "editor.fontLigatures": true,
  "editor.rulers": [80, 120],
  "editor.lineNumbers": "relative",
  "editor.renderWhitespace": "all",
  "editor.tabSize": 2,
  "editor.fontSize": 20,
  "editor.formatOnPaste": true,
  "editor.detectIndentation": false,
  "editor.suggestSelection": "first",
  "editor.renderLineHighlight": "all",
  "editor.wordWrap": "off",
  "editor.cursorSurroundingLines": 10,
  "workbench.iconTheme": "bearded-icons",
  "workbench.settings.openDefaultKeybindings": true,
  "workbench.startupEditor": "none",
  "workbench.editor.enablePreview": false,
  "workbench.colorCustomizations": {
      // "editor.lineHighlightBackground": "#ffffff7f",
      // "statusBar.background": "#ff000083"
  },

  // explorer
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,

  //files
  "files.eol": "\n",
  "files.trimTrailingWhitespace": true,
  "files.exclude": {
      "**/.classpath": true,
      "**/.project": true,
      "**/.settings": true,
      "**/.factorypath": true
  },

  //git
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.autoRepositoryDetection": false,
  "git.detectSubmodules": true,
  "git.showActionButton": {
    "commit": false,
    "publish": false,
    "sync": false
  },

  //prettier
  "prettier.proseWrap": "always",
  "prettier.tabWidth": 4,

  //go
  "go.useLanguageServer": true,
  "go.autocompleteUnimportedPackages": true,
  "go.toolsManagement.autoUpdate": true,

  //java
  "java.semanticHighlighting.enabled": true,
  "java.debug.settings.console": "internalConsole",
  "java.project.importOnFirstTimeStartup": "automatic",
  "java.configuration.runtimes": [
    {
      "name": "JavaSE-11",
      "path": "/Users/wardjl/bin/jdk-11.0.15+10/Contents/Home",
    }
  ],

  //yaml
  "yaml.format.enable": true,
  "[yaml]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  //json
  "[json]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  //javascript
  "[javascript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  //html
  "html.format.wrapLineLength": 80,
  "[html]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  //markdown
  "markdown.extension.tableFormatter.enabled": false,
  "markdown.extension.toc.levels": "2..6",
  "markdown.extension.toc.omittedFromToc": {
      "README.md": ["## Table of Contents"]
  },
  "[markdown]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  //extensions
  "extensions.autoUpdate": false,
  "extensions.autoCheckUpdates": true,

  //zen
  "zenMode.hideLineNumbers": false,
  "zenMode.centerLayout": false,

  //miscellaneous
  "update.mode": "none",
  "telemetry.telemetryLevel": "off",
  "redhat.telemetry.enabled": false,
  "diffEditor.ignoreTrimWhitespace": false,
  "liveshare.audio.joinCallBehavior": "accept",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "security.workspace.trust.untrustedFiles": "newWindow",
  "debug.showInStatusBar": "always",
  "notebook.showCellStatusBar": "hidden",
  "cSpell.showStatus": false,
  "search.useReplacePreview": false,
  "thunder-client.codeSnippetLanguage": "curl",
  "gremlins.characters": {
    "2013": {
      "description": "en dash",
      "level": "warning"
    },
    "2018": {
      "description": "left single quotation mark",
      "level": "warning"
    },
    "2019": {
      "description": "right single quotation mark",
      "level": "warning"
    },
    "2029": {
      "zeroWidth": true,
      "description": "paragraph separator",
      "level": "error"
    },
    "0003": {
      "description": "end of text",
      "level": "warning"
    },
    "000b": {
      "description": "line tabulation",
      "level": "warning"
    },
    "00a0": {
      "description": "non breaking space",
      "level": "info"
    },
    "00ad": {
      "description": "soft hyphen",
      "level": "info"
    },
    "200b": {
      "zeroWidth": true,
      "description": "zero width space",
      "level": "error"
    },
    "200c": {
      "zeroWidth": true,
      "description": "zero width non-joiner",
      "level": "warning"
    },
    "200e": {
      "zeroWidth": true,
      "description": "left-to-right mark",
      "level": "error"
    },
    "201c": {
      "description": "left double quotation mark",
      "level": "warning"
    },
    "201d": {
      "description": "right double quotation mark",
      "level": "warning"
    },
    "202c": {
      "zeroWidth": true,
      "description": "pop directional formatting",
      "level": "error"
    },
    "202d": {
      "zeroWidth": true,
      "description": "left-to-right override",
      "level": "error"
    },
    "202e": {
      "zeroWidth": true,
      "description": "right-to-left override",
      "level": "error"
    },
    "fffc": {
      "zeroWidth": true,
      "description": "object replacement character",
      "level": "error"
    }
  },
  "vs-kubernetes": {
    "checkForMinikubeUpgrade": false,
    "vs-kubernetes.knownKubeconfigs": [
      "/workspaces/red-oak-sandbox/dev-account/josh/kubeconfig.yml",
      "/Users/wardjl/.kube/config"
    ],
    "vs-kubernetes.kubeconfig": "/Users/wardjl/.kube/config"
  },
  "yaml.customTags": [
    "!And",
    "!And sequence",
    "!If",
    "!If sequence",
    "!Not",
    "!Not sequence",
    "!Equals",
    "!Equals sequence",
    "!Or",
    "!Or sequence",
    "!FindInMap",
    "!FindInMap sequence",
    "!Base64",
    "!Join",
    "!Join sequence",
    "!Cidr",
    "!Ref",
    "!Sub",
    "!Sub sequence",
    "!GetAtt",
    "!GetAZs",
    "!ImportValue",
    "!ImportValue sequence",
    "!Select",
    "!Select sequence",
    "!Split",
    "!Split sequence"
  ],
  "aws.resources.enabledResources": [
    "AWS::EKS::Cluster"
  ],
  "editor.suggest.showMethods": true,
  "editor.suggest.preview": true,
  "editor.acceptSuggestionOnEnter": "on",
  "editor.snippetSuggestions": "top",
  "aws.telemetry": false,
  "editor.smoothScrolling": true,
  "rapidapi.terminalLink.enabled": false,
  "liveshare.launcherClient": "visualStudioCode",
  "liveshare.languages.allowGuestCommandControl": true,
  "synthwave84.brightness": 1,
  "workbench.colorTheme": "Bearded Theme Vivid Black",
  "files.enableTrash": false,
  "editor.minimap.enabled": false
}

